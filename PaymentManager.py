from telebot import types
from datetime import datetime
from dateutil.relativedelta import relativedelta

class PaymentManager:

    def __init__(self, bot, payments_token, db_manager):
        self.bot = bot
        self.payments_token = payments_token
        self.db_manager = db_manager

    def pre_checkout_query(self, pre_checkout_query):
        try:
            self.bot.answer_pre_checkout_query(pre_checkout_query.id, ok=True)
        except Exception as e:
            print(f"Error handling pre_checkout_query: {e}")

    def successful_payment(self, message):
        payment_info = message.successful_payment
        payment_details = (f"Chat id: {message.chat.id}\n"
                           f"Currency: {payment_info.currency}\n"
                           f"Total amount: {payment_info.total_amount / 100:.2f} {payment_info.currency}\n"
                           f"Invoice payload: {payment_info.invoice_payload}")
        print("SUCCESSFUL PAYMENT:", payment_details)
        self.bot.send_message(message.chat.id,
                              f"–ü–ª–∞—Ç—ñ–∂ –Ω–∞ —Å—É–º—É {payment_info.total_amount / 100:.2f} {payment_info.currency} –ø—Ä–æ–π—à–æ–≤ —É—Å–ø—ñ—à–Ω–æ.")

        if payment_info.invoice_payload == "üî¥ –ï–∫–æ–Ω–æ–º":
            self.pay1_payment_end(message.chat.id)
        elif payment_info.invoice_payload == "üü† –°—Ç–∞–Ω–¥–∞—Ä—Ç":
            self.pay2_payment_end(message.chat.id)
        elif payment_info.invoice_payload == "üü¢ –ë—ñ–∑–Ω–µ—Å":
            self.pay3_payment_end(message.chat.id)

    def pay1_command(self, message):
        prices = [types.LabeledPrice(label="üî¥ –ï–∫–æ–Ω–æ–º", amount=4000)]
        self.bot.send_invoice(
            chat_id=message.chat.id,
            title="üî¥ –ï–∫–æ–Ω–æ–º",
            description="""–°—Ç–≤–æ—Ä—é–π—Ç–µ –¥–æ –¥–≤–æ—Ö(2) –ø–æ—à—É–∫–æ–≤–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤ –≤–∞–∫–∞–Ω—Å—ñ–π –Ω–∞ –º—ñ—Å—è—Ü—å. \n–¢–∞—Ä–∏—Ñ –∞–∫—Ç–∏–≤—É—î—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –æ–¥—Ä–∞–∑—É –ø—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏ —Ç–∞ —Ç—Ä–∏–≤–∞—î –ø—Ä–æ—Ç—è–≥–æ–º –æ–¥–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω–æ–≥–æ –º—ñ—Å—è—Ü—è. \n–û–ø–ª–∞—á—É—é—á–∏ –í–∏ –ø–æ–≥–æ–¥–∂—É—î—Ç–µ—Å—å –∑ –£–º–æ–≤–∞–º–∏ –ö–æ—Ä–∏—Å—Ç—É–≤–∞–Ω–Ω—è.""",
            provider_token=self.payments_token,
            currency='UAH',
            photo_url="https://www.aroged.com/wp-content/uploads/2022/06/Telegram-has-a-premium-subscription.jpg",
            # –§–æ—Ç–æ –º–æ–∂–Ω–∞ –∑–º—ñ–Ω–∏—Ç–∏
            photo_width=416,
            photo_height=234,
            photo_size=416,
            is_flexible=False,
            prices=prices,
            max_tip_amount=20000,
            suggested_tip_amounts=[1000, 5000, 10000],
            start_parameter='time-machine-subs',
            invoice_payload='üî¥ –ï–∫–æ–Ω–æ–º'
        )

    def pay2_command(self, message):
        prices = [types.LabeledPrice(label="üü† –°—Ç–∞–Ω–¥–∞—Ä—Ç", amount=8000)]
        self.bot.send_invoice(
            chat_id=message.chat.id,
            title="üü† –°—Ç–∞–Ω–¥–∞—Ä—Ç",
            description="""–°—Ç–≤–æ—Ä—é–π—Ç–µ –¥–æ —á–æ—Ç–∏—Ä—å–æ—Ö(4) –ø–æ—à—É–∫–æ–≤–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤ –≤–∞–∫–∞–Ω—Å—ñ–π –Ω–∞ –º—ñ—Å—è—Ü—å. \n–¢–∞—Ä–∏—Ñ –∞–∫—Ç–∏–≤—É—î—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –æ–¥—Ä–∞–∑—É –ø—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏ —Ç–∞ —Ç—Ä–∏–≤–∞—î –ø—Ä–æ—Ç—è–≥–æ–º –æ–¥–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω–æ–≥–æ –º—ñ—Å—è—Ü—è. \n–û–ø–ª–∞—á—É—é—á–∏ –í–∏ –ø–æ–≥–æ–¥–∂—É—î—Ç–µ—Å—å –∑ –£–º–æ–≤–∞–º–∏ –ö–æ—Ä–∏—Å—Ç—É–≤–∞–Ω–Ω—è.""",
            provider_token=self.payments_token,
            currency='UAH',
            photo_url="https://www.aroged.com/wp-content/uploads/2022/06/Telegram-has-a-premium-subscription.jpg",
            # –§–æ—Ç–æ –º–æ–∂–Ω–∞ –∑–º—ñ–Ω–∏—Ç–∏
            photo_width=416,
            photo_height=234,
            photo_size=416,
            is_flexible=False,
            prices=prices,
            max_tip_amount=20000,
            suggested_tip_amounts=[1000, 5000, 10000],
            start_parameter='time-machine-subs',
            invoice_payload='üü† –°—Ç–∞–Ω–¥–∞—Ä—Ç'
        )

    def pay3_command(self, message):
        prices = [types.LabeledPrice(label="üü¢ –ë—ñ–∑–Ω–µ—Å", amount=20000)]
        self.bot.send_invoice(
            chat_id=message.chat.id,
            title="üü¢ –ë—ñ–∑–Ω–µ—Å",
            description="""–°—Ç–≤–æ—Ä—é–π—Ç–µ –¥–æ –¥–µ—Å—è—Ç–∏(10) –ø–æ—à—É–∫–æ–≤–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤ –≤–∞–∫–∞–Ω—Å—ñ–π –Ω–∞ –º—ñ—Å—è—Ü—å. \n–¢–∞—Ä–∏—Ñ –∞–∫—Ç–∏–≤—É—î—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –æ–¥—Ä–∞–∑—É –ø—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏ —Ç–∞ —Ç—Ä–∏–≤–∞—î –ø—Ä–æ—Ç—è–≥–æ–º –æ–¥–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω–æ–≥–æ –º—ñ—Å—è—Ü—è. \n–û–ø–ª–∞—á—É—é—á–∏ –í–∏ –ø–æ–≥–æ–¥–∂—É—î—Ç–µ—Å—å –∑ –£–º–æ–≤–∞–º–∏ –ö–æ—Ä–∏—Å—Ç—É–≤–∞–Ω–Ω—è.""",
            provider_token=self.payments_token,
            currency='UAH',
            photo_url="https://www.aroged.com/wp-content/uploads/2022/06/Telegram-has-a-premium-subscription.jpg",
            # –§–æ—Ç–æ –º–æ–∂–Ω–∞ –∑–º—ñ–Ω–∏—Ç–∏
            photo_width=416,
            photo_height=234,
            photo_size=416,
            is_flexible=False,
            prices=prices,
            max_tip_amount=20000,
            suggested_tip_amounts=[1000, 5000, 10000],
            start_parameter='time-machine-subs',
            invoice_payload='üü¢ –ë—ñ–∑–Ω–µ—Å'
        )

    def pay1_payment_end(self, chat_id):
        end_date_subscription = self.get_end_subscription_date()
        self.db_manager.execute_query(
            "UPDATE users SET paid_subscription = 1, max_num_of_request = 2, end_date_subscription = %s WHERE chat_id = %s",
            (end_date_subscription, chat_id))
        self.bot.send_message(chat_id, "–í–∞—à –ø–æ—Ç–æ—á–Ω–∏–π —Ç–∞—Ä–∏—Ñ –∑–º—ñ–Ω–µ–Ω–æ –Ω–∞ –ï–∫–æ–Ω–æ–º.")

    def pay2_payment_end(self, chat_id):
        end_date_subscription = self.get_end_subscription_date()
        self.db_manager.execute_query(
            "UPDATE users SET paid_subscription = 2, max_num_of_request = 4, end_date_subscription = %s WHERE chat_id = %s",
            (end_date_subscription, chat_id))
        self.bot.send_message(chat_id, "–í–∞—à –ø–æ—Ç–æ—á–Ω–∏–π —Ç–∞—Ä–∏—Ñ –∑–º—ñ–Ω–µ–Ω–æ –Ω–∞ –°—Ç–∞–Ω–¥–∞—Ä—Ç.")

    def pay3_payment_end(self, chat_id):
        end_date_subscription = self.get_end_subscription_date()
        self.db_manager.execute_query(
            "UPDATE users SET paid_subscription = 3, max_num_of_request = 10, end_date_subscription = %s WHERE chat_id = %s",
            (end_date_subscription, chat_id))
        self.bot.send_message(chat_id, "–í–∞—à –ø–æ—Ç–æ—á–Ω–∏–π —Ç–∞—Ä–∏—Ñ –∑–º—ñ–Ω–µ–Ω–æ –Ω–∞ –ë—ñ–∑–Ω–µ—Å.")

    def get_end_subscription_date(self):
        current_date = datetime.now().date()
        return current_date + relativedelta(months=1)